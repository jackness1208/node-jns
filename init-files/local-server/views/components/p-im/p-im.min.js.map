{"version":3,"sources":["../../lib/util/util.js","p-im.js"],"names":["define","util","Promise","fn","she","this","queue","current","then","push","start","myArgv","Array","prototype","slice","call","arguments","resolve","apply","length","utf8Encode","str","replace","$1","charCodeAt","toString","type","obj","Object","String","toLowerCase","substring","isPlainObject","key","hasOwn","hasOwnProperty","constructor","undefined","extend","options","name","src","copy","copyIsArray","clone","target","i","deep","require","wSocket","op","init","interface","window","location","protocol","hostname","onmessage","onconnect","isSupported","socket","setOption","console","log","io","on","data","reload","ws","onresend","iOp","send","emit","global"],"mappings":"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":"p-im.min.js","sourcesContent":["define('util',[], function(){\n    var util = {\n        /**\n         * promise 模块\n         */\n        Promise: function(fn){\n            var she = this;\n            \n            she.queue = [];\n            she.current = 0;\n            she.then = function(fn){\n                typeof fn == 'function' && she.queue.push(fn);\n                return she;\n            };\n            she.start = function(){\n                var myArgv = Array.prototype.slice.call(arguments);\n                she.resolve.apply(she, myArgv);\n            };\n\n            she.resolve = function(){\n                var myArgv = Array.prototype.slice.call(arguments);\n                \n                myArgv.push(she.resolve);\n                if(she.current){\n                    myArgv.push(she.queue[she.current - 1]);\n                }\n\n                if(she.current != she.queue.length){\n                    she.queue[she.current++].apply(she, myArgv);\n                }\n            };\n            if(fn){\n                she.then(fn);\n            }\n\n            \n        },\n        /**\n         * 字符串转 utf8编码\n         * @param {string}  文本\n         * @return {string} 转化后文本\n         */\n        utf8Encode: function(str){\n            if(typeof str != 'string'){\n                return str;\n            }\n            return str.replace(/[\\u4E00-\\u9FA5]/g, function($1){ return \"\\\\u\" + (\"00\"+$1.charCodeAt().toString(16)).slice(-4);});\n        },\n        \n        /**\n         * 判断对象类别\n         * @param {Anything} 对象\n         * @return {string}  类型\n         */\n        type: function (obj) {\n            var type,\n                toString = Object.prototype.toString;\n            if (obj == null) {\n                type = String(obj);\n            } else {\n                type = toString.call(obj).toLowerCase();\n                type = type.substring(8, type.length - 1);\n            }\n            return type;\n        },\n\n        isPlainObject: function (obj) {\n            var she = this,\n                key,\n                hasOwn = Object.prototype.hasOwnProperty;\n\n            if (!obj || she.type(obj) !== 'object') {\n                return false;\n            }\n\n            if (obj.constructor &&\n                !hasOwn.call(obj, 'constructor') &&\n                !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n                return false;\n            }\n\n            for (key in obj) {}\n            return key === undefined || hasOwn.call(obj, key);\n        },\n\n        /**\n         * 扩展方法(来自 jQuery)\n         * extend([deep,] target, obj1 [, objN])\n         * @base she.isPlainObject\n         */\n        extend: function () {\n            var she = this,\n                options, name, src, copy, copyIsArray, clone,\n                target = arguments[0] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === 'boolean') {\n                deep = target;\n                target = arguments[1] || {};\n                // skip the boolean and the target\n                i = 2;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== 'object' && she.type(target) !== 'function') {\n                target = {};\n            }\n\n            // extend caller itself if only one argument is passed\n            if (length === i) {\n                target = this;\n                --i;\n            }\n\n            for (; i<length; i++) {\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) != null) {\n                    // Extend the base object\n                    for (name in options) {\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (she.isPlainObject(copy) || (copyIsArray = she.type(copy) === 'array'))) {\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && she.type(src) === 'array' ? src : [];\n                            } else {\n                                clone = src && she.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = she.extend(deep, clone, copy);\n\n                        // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n                            target[name] = copy;\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n        }\n\n    };\n\n    return util;\n});\n\n","require(['util'], function(util){\n\n    function wSocket(op){\n        return new wSocket.fn.init(op);\n    }\n\n\n    wSocket.prototype = wSocket.fn = {\n        // 参数设置\n        options: {\n            // websocket 地址\n            interface: window.location.protocol + '//' + window.location.hostname + 8123,\n\n            // 收到信息后回调函数\n            onmessage: function(){},\n            \n            // 连上后回调函数\n            onconnect: function(){}\n\n        },\n\n        // 是否支持\n        isSupported: true,\n\n        // socket.io 句柄\n        socket: undefined,\n\n        // 初始化\n        init: function(op){\n\n            var she = wSocket.fn,\n                socket;\n\n            she.setOption(op);\n\n            console.log(she.options.interface)\n            socket = io(she.options.interface);\n\n            // test\n            socket.on('reload', function(data){\n                window.location.reload();\n            });\n\n\n            socket.on('message', function (data) {\n                ws.onresend && ws.onresend(data);\n            });\n\n\n            she.socket = socket;\n            return she;\n        },\n        setOption: function(op){\n            var she = this,\n                iOp = she.options;\n\n            if(!op){\n                return;\n            }\n            for(var key in op){\n                if(op.hasOwnProperty(key) && iOp.hasOwnProperty(key)){\n                    iOp[key] = op[key];\n                }\n            }\n        },\n\n        // 发送\n        send: function(data){\n            var she = this;\n\n            if(she.socket){\n                she.socket.emit('message', data);\n            }\n        }\n    };\n\n    !function(global, undefined){\n\n        wSocket();\n    }(this);\n});\n\n\n\ndefine(\"p-im\", function(){});\n\n"]}